<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pcb_8h" kind="file" language="C++">
    <compoundname>pcb.h</compoundname>
    <includes refid="pandos__const_8h" local="yes">pandos_const.h</includes>
    <includes refid="pandos__types_8h" local="yes">pandos_types.h</includes>
    <incdepgraph>
      <node id="5">
        <label>umps3/umps/types.h</label>
      </node>
      <node id="1">
        <label>/home/circleci/docs/h/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pandos_const.h</label>
        <link refid="pandos__const_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>umps3/umps/const.h</label>
      </node>
      <node id="4">
        <label>pandos_types.h</label>
        <link refid="pandos__types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcb_8h_1a5cbd92344b2dae9f317b956359b5f2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initPcbs</definition>
        <argsstring>()</argsstring>
        <name>initPcbs</name>
        <briefdescription>
<para>Initializes the PCBs. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>This function should be called before any other PCB-related function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="13" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1ab42d615bd7053b952a73dee6fd84c54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freePcb</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>freePcb</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Return the pcb to memory. </para>
        </briefdescription>
        <detaileddescription>
<para>The pcb can&apos;t be used anymore.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pcb to be released </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="21" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="21" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a03951baaa04f601feee5405138304892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* allocPcb</definition>
        <argsstring>()</argsstring>
        <name>allocPcb</name>
        <briefdescription>
<para>Allocate a pcb and return it, if no more memory is avaible return NULL. </para>
        </briefdescription>
        <detaileddescription>
<para>All the records are cleaned before the allocation.</para>
<para><simplesect kind="return"><para>pcb_t* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="30" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="30" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a21ca0d917dc8cc9a515f74350305c8fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* mkEmptyProcQ</definition>
        <argsstring>()</argsstring>
        <name>mkEmptyProcQ</name>
        <briefdescription>
<para>Creates a new empty process queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The new process queue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="37" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="37" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a14a862477c2301432a9e9b0aac901c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int emptyProcQ</definition>
        <argsstring>(pcb_t *tp)</argsstring>
        <name>emptyProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Checks if a process queue is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if tp is empty, FALSE otherwise.</para>
</simplesect>
<simplesect kind="remark"><para>TRUE and FALSE are defined in umps3/umps/const.h. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="48" column="5" declfile="/home/circleci/docs/h/pcb.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1ab3b557f910b033449a42aa5cf9b86c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertProcQ</definition>
        <argsstring>(pcb_t **tp, pcb_t *p)</argsstring>
        <name>insertProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> **</type>
          <declname>tp</declname>
        </param>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="50" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a80a3845d65f890d39a523f3df66095d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* headProcQ</definition>
        <argsstring>(pcb_t *tp)</argsstring>
        <name>headProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the pcb that is the head of the process queue pointed by tp, without removing it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the tail of the process queue to operate on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the process at the head position in the queue. If the queue is empty (tp is NULL) return NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="60" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="60" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a4693d732287c116baf471b86cec97b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* removeProcQ</definition>
        <argsstring>(pcb_t **tp)</argsstring>
        <name>removeProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> **</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="62" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="62" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a53e0aeba401f9c8967fa7b9ae4bcb98b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* outProcQ</definition>
        <argsstring>(pcb_t **tp, pcb_t *p)</argsstring>
        <name>outProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> **</type>
          <declname>tp</declname>
        </param>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Removes and return the pcb pointed by p from the process queue pointed by tp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pointer of the queue (sentinel). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pcb to be removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the removed pcb. If the pcb pointed by p is not in the queue return NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="73" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="73" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a7d6e59469f944f132a41c390b606ab08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int emptyChild</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>emptyChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Checks whether the pcb pointed by p has children. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pcb to be checked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if the pcb pointed by p doesn&apos;t have any children, FALSE otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="82" column="5" declfile="/home/circleci/docs/h/pcb.h" declline="82" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1acbb38484ab3807a24bf6513c05101a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertChild</definition>
        <argsstring>(pcb_t *prnt, pcb_t *p)</argsstring>
        <name>insertChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>prnt</declname>
        </param>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Inserts the pcb pointed by p as a child of the pcb pointed by prnt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pcb who will become parent of p. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pcb who will become child of prnt. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="91" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a4d8a060bdeac7847a16e45ffe18d3389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* removeChild</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>removeChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Remove and return the first child of the pcb pointed by p. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pcb whose first child will be removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the first child of the pcb pointed by p. If p has no children return NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="101" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="101" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1ac842b91f7c9963383016a95ae09f903c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* outChild</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>outChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Removes and return the pcb pointed by p from the list of his parent&apos;s children. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the pcb that will be removed and returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the removed pcb. If the pcb pointed by p doesn&apos;t have any parent return NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="111" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="111" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PCB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCB_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pandos_const.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pandos_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initPcbs();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freePcb(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>allocPcb();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>mkEmptyProcQ();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emptyProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*tp);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>**tp,<sp/><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>headProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*tp);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>removeProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>**tp);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>outProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>**tp,<sp/><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emptyChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*prnt,<sp/><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>removeChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>outChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/circleci/docs/h/pcb.h"/>
  </compounddef>
</doxygen>
