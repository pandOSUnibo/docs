<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pcb_8h" kind="file" language="C++">
    <compoundname>pcb.h</compoundname>
    <includes refid="pandos__const_8h" local="yes">pandos_const.h</includes>
    <includes refid="pandos__types_8h" local="yes">pandos_types.h</includes>
    <incdepgraph>
      <node id="5">
        <label>umps3/umps/types.h</label>
      </node>
      <node id="1">
        <label>/home/circleci/docs/h/pcb.h</label>
        <link refid="pcb_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pandos_const.h</label>
        <link refid="pandos__const_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>umps3/umps/const.h</label>
      </node>
      <node id="4">
        <label>pandos_types.h</label>
        <link refid="pandos__types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcb_8h_1a5cbd92344b2dae9f317b956359b5f2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initPcbs</definition>
        <argsstring>()</argsstring>
        <name>initPcbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="7" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="7" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1ab42d615bd7053b952a73dee6fd84c54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freePcb</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>freePcb</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="9" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="9" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a03951baaa04f601feee5405138304892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* allocPcb</definition>
        <argsstring>()</argsstring>
        <name>allocPcb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="11" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="11" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a21ca0d917dc8cc9a515f74350305c8fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* mkEmptyProcQ</definition>
        <argsstring>()</argsstring>
        <name>mkEmptyProcQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="13" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="13" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a14a862477c2301432a9e9b0aac901c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int emptyProcQ</definition>
        <argsstring>(pcb_t *tp)</argsstring>
        <name>emptyProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="15" column="5" declfile="/home/circleci/docs/h/pcb.h" declline="15" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1ab3b557f910b033449a42aa5cf9b86c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertProcQ</definition>
        <argsstring>(pcb_t **tp, pcb_t *p)</argsstring>
        <name>insertProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> **</type>
          <declname>tp</declname>
        </param>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="17" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a80a3845d65f890d39a523f3df66095d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* headProcQ</definition>
        <argsstring>(pcb_t *tp)</argsstring>
        <name>headProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="19" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="19" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a4693d732287c116baf471b86cec97b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* removeProcQ</definition>
        <argsstring>(pcb_t **tp)</argsstring>
        <name>removeProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> **</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="21" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="21" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a53e0aeba401f9c8967fa7b9ae4bcb98b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* outProcQ</definition>
        <argsstring>(pcb_t **tp, pcb_t *p)</argsstring>
        <name>outProcQ</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> **</type>
          <declname>tp</declname>
        </param>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="23" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="23" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a7d6e59469f944f132a41c390b606ab08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int emptyChild</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>emptyChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="25" column="5" declfile="/home/circleci/docs/h/pcb.h" declline="25" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1acbb38484ab3807a24bf6513c05101a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertChild</definition>
        <argsstring>(pcb_t *prnt, pcb_t *p)</argsstring>
        <name>insertChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>prnt</declname>
        </param>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="27" column="6" declfile="/home/circleci/docs/h/pcb.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1a4d8a060bdeac7847a16e45ffe18d3389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* removeChild</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>removeChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="29" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="29" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="pcb_8h_1ac842b91f7c9963383016a95ae09f903c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
        <definition>pcb_t* outChild</definition>
        <argsstring>(pcb_t *p)</argsstring>
        <name>outChild</name>
        <param>
          <type><ref refid="structpcb__t" kindref="compound">pcb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/circleci/docs/h/pcb.h" line="31" column="7" declfile="/home/circleci/docs/h/pcb.h" declline="31" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PANDOS_PCB_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PANDOS_PCB_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pandos_const.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pandos_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initPcbs();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freePcb(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*allocPcb();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*mkEmptyProcQ();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emptyProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*tp);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>**tp,<sp/><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*headProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*tp);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*removeProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>**tp);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*outProcQ(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>**tp,<sp/><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emptyChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*prnt,<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>removeChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*p);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="structpcb__t" kindref="compound">pcb_t</ref><sp/>*outChild(<ref refid="structpcb__t" kindref="compound">pcb_t</ref>*<sp/>p);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/circleci/docs/h/pcb.h"/>
  </compounddef>
</doxygen>
